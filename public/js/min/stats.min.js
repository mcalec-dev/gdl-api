document.addEventListener("DOMContentLoaded",(function(){async function e(){const e=document.getElementById("loading"),n=document.getElementById("error"),o=document.getElementById("stats-content");try{const s=await fetch("/gdl/api/stats");if(!s.ok)throw new Error(`HTTP error! Status: ${s.status}`);const a=await s.json();document.getElementById("total-directories").textContent=a.collections.totalDirectories.toLocaleString(),document.getElementById("total-files").textContent=a.collections.totalFiles.toLocaleString(),document.getElementById("total-size").textContent=t(a.collections.totalSize),document.getElementById("average-file-size").textContent=t(a.collections.averageFileSize),function(e){const n=document.getElementById("file-types");if(!n)return;if(n.innerHTML="",!e)return;Object.entries(e).sort((([,e],[,t])=>t.count-e.count)).forEach((([e,o])=>{const s=document.createElement("div");s.className="file-type",s.innerHTML=`\n                    <span>${e}</span>\n                    <span>${o.count.toLocaleString()} (${t(o.size)})</span>\n                `,n.appendChild(s)}))}(a.collections.fileTypes),function(e){const n=document.getElementById("collection-details");if(!n)return;if(n.innerHTML="",!e)return;Object.entries(e).sort((([,e],[,t])=>t.files-e.files)).forEach((([e,o])=>{const s=document.createElement("div");s.className="collection-item",s.innerHTML=`\n                    <span>${e}</span>\n                    <span>${o.files.toLocaleString()} files (${t(o.size)})</span>\n                `,n.appendChild(s)}))}(a.collections.details),function(e){const n=document.getElementById("memory-stats");if(!n)return;if(n.innerHTML="",!e)return;[{label:"Heap Used",value:t(e.heapUsed)},{label:"RSS",value:t(e.rss)},{label:"External",value:t(e.external)},{label:"Array Buffers",value:t(e.arrayBuffers)}].forEach((e=>{const t=document.createElement("div");t.className="memory-item",t.innerHTML=`\n                  <span>${e.label}</span>\n                  <span>${e.value}</span>\n              `,n.appendChild(t)}))}(a.api.memory),function(e){const t=document.getElementById("directory-list");if(!t)return;t.innerHTML=`\n              <div class="directory-item">\n                  <span>API Version</span>\n                  <span>${e.api.version||"Unknown"}</span>\n              </div>\n              <div class="directory-item">\n                  <span>Node Version</span>\n                  <span>${e.api.node}</span>\n              </div>\n              <div class="directory-item">\n                  <span>Uptime</span>\n                  <span>${function(e){const t=Math.floor(e/86400),n=Math.floor(e%86400/3600),o=Math.floor(e%3600/60),s=[];t>0&&s.push(`${t}d`);n>0&&s.push(`${n}h`);o>0&&s.push(`${o}m`);return s.join(" ")||"< 1m"}(e.api.uptime)}</span>\n              </div>\n          `}(a),document.getElementById("refresh-time").textContent=`Last updated: ${new Date(a.api.timestamp).toLocaleString()}`,e.style.display="none",n.style.display="none",o.style.display="block"}catch(t){e.style.display="none",n.style.display="block",n.textContent=`Failed to load stats: ${t.message}`}}function t(e){const t=["B","KB","MB","GB"];let n=e,o=0;for(;n>=1024&&o<t.length-1;)n/=1024,o++;return`${`${Math.round(100*n/100)} ${t[o]}`}`}e(),setInterval(e,3e5)}));